<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdditionalCost_NameField" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="AdditionalCost_RequireName" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="AdditionalCost_RequireValue" xml:space="preserve">
    <value>Value is required</value>
  </data>
  <data name="AdditionalCost_Title" xml:space="preserve">
    <value>Additional Costs</value>
  </data>
  <data name="AdditionalCost_ValueField" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Attendance_Title" xml:space="preserve">
    <value>Attendance</value>
  </data>
  <data name="ConsumableType_Feed" xml:space="preserve">
    <value>Feed</value>
  </data>
  <data name="ConsumableType_Ovk" xml:space="preserve">
    <value>OVK</value>
  </data>
  <data name="Consumable_ActiveField" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Consumable_NameField" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Consumable_RequireName" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="Consumable_RequireUnitPrice" xml:space="preserve">
    <value>Unit Price is required</value>
  </data>
  <data name="Consumable_Title" xml:space="preserve">
    <value>Consumable</value>
  </data>
  <data name="Consumable_TypeField" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Consumable_UnitField" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="Consumable_UnitPriceField" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="Consumption_Title" xml:space="preserve">
    <value>Consumption</value>
  </data>
  <data name="Dashboard_Title" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="Depreciation_Title" xml:space="preserve">
    <value>Depreciation</value>
  </data>
  <data name="EggProductionDetail_CrackedEggCountField" xml:space="preserve">
    <value>Cracked Egg Count</value>
  </data>
  <data name="EggProductionDetail_FcrField" xml:space="preserve">
    <value>Fcr</value>
  </data>
  <data name="EggProductionDetail_GoodEggCountField" xml:space="preserve">
    <value>Good Egg Count</value>
  </data>
  <data name="EggProductionDetail_HouseField" xml:space="preserve">
    <value>House</value>
  </data>
  <data name="EggProductionDetail_InvalidCrackedCount" xml:space="preserve">
    <value>Cracked egg count is required</value>
  </data>
  <data name="EggProductionDetail_InvalidFcr" xml:space="preserve">
    <value>Fcr value is required</value>
  </data>
  <data name="EggProductionDetail_InvalidGoodEggCount" xml:space="preserve">
    <value>Good egg count is required</value>
  </data>
  <data name="EggProductionDetail_InvalidRetailQuantity" xml:space="preserve">
    <value>Retail quantity is required</value>
  </data>
  <data name="EggProductionDetail_RetailQuantityField" xml:space="preserve">
    <value>Retail Quantity</value>
  </data>
  <data name="EggProduction_DateField" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="EggProduction_DuplicateDate" xml:space="preserve">
    <value>Date is duplicate</value>
  </data>
  <data name="EggProduction_DuplicateHouse" xml:space="preserve">
    <value>House is duplicate</value>
  </data>
  <data name="EggProduction_InvalidDate" xml:space="preserve">
    <value>Date is invalid</value>
  </data>
  <data name="EggProduction_RequireDetails" xml:space="preserve">
    <value>Details is invalid</value>
  </data>
  <data name="EggProduction_Title" xml:space="preserve">
    <value>Egg Production</value>
  </data>
  <data name="EmployeeCostDetail_DescriptionField" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="EmployeeCostDetail_EmployeeField" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="EmployeeCostDetail_PresentField" xml:space="preserve">
    <value>Present</value>
  </data>
  <data name="EmployeeCostDetail_RequireEmployee" xml:space="preserve">
    <value>Employee is required</value>
  </data>
  <data name="EmployeeCostDetail_SalaryField" xml:space="preserve">
    <value>Salary</value>
  </data>
  <data name="EmployeeCost_DateField" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="EmployeeCost_DuplicateDate" xml:space="preserve">
    <value>Date is duplicate</value>
  </data>
  <data name="EmployeeCost_DuplicateEmployee" xml:space="preserve">
    <value>Employee is duplicate !</value>
  </data>
  <data name="EmployeeCost_RequireDetails" xml:space="preserve">
    <value>Details are required !</value>
  </data>
  <data name="EmployeeCost_Title" xml:space="preserve">
    <value>Employee Cost</value>
  </data>
  <data name="EmployeeCost_TotalField" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Employee_ActiveField" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Employee_NameField" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Employee_RequireName" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="Employee_RequireSalary" xml:space="preserve">
    <value>Salary is required</value>
  </data>
  <data name="Employee_SalaryField" xml:space="preserve">
    <value>Salary</value>
  </data>
  <data name="Employee_Title" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="General_AppTitle" xml:space="preserve">
    <value>Egg Farm System</value>
  </data>
  <data name="General_Cancel" xml:space="preserve">
    <value>General_Cancel</value>
  </data>
  <data name="General_Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="General_DeleteConfirmation" xml:space="preserve">
    <value>Are you sure you want to delete this data?</value>
  </data>
  <data name="General_Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="General_New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="General_Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="General_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="HenDepreciationDetail_DepreciationField" xml:space="preserve">
    <value>Depreciation</value>
  </data>
  <data name="HenDepreciationDetail_HouseIdField" xml:space="preserve">
    <value>House</value>
  </data>
  <data name="HenDepreciationDetail_InitialPriceField" xml:space="preserve">
    <value>Initial Price</value>
  </data>
  <data name="HenDepreciationDetail_InvalidDepreciation" xml:space="preserve">
    <value>Depreciation is invalid</value>
  </data>
  <data name="HenDepreciationDetail_InvalidInitialPrice" xml:space="preserve">
    <value>Initial price is required</value>
  </data>
  <data name="HenDepreciationDetail_InvalidSellingPrice" xml:space="preserve">
    <value>Selling price is required</value>
  </data>
  <data name="HenDepreciationDetail_ProfitField" xml:space="preserve">
    <value>Profit</value>
  </data>
  <data name="HenDepreciationDetail_RequireHouseId" xml:space="preserve">
    <value>House is required</value>
  </data>
  <data name="HenDepreciationDetail_SellingPriceField" xml:space="preserve">
    <value>Selling Price</value>
  </data>
  <data name="HenDepreciation_DateField" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="HenDepreciation_DuplicateDate" xml:space="preserve">
    <value>Date is duplicate</value>
  </data>
  <data name="HenDepreciation_DuplicateHouse" xml:space="preserve">
    <value>House is duplicate</value>
  </data>
  <data name="HenDepreciation_RequireDetails" xml:space="preserve">
    <value>Details is required</value>
  </data>
  <data name="Hen_ActiveField" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Hen_CostField" xml:space="preserve">
    <value>Cost</value>
  </data>
  <data name="Hen_CountField" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="Hen_HouseField" xml:space="preserve">
    <value>House</value>
  </data>
  <data name="Hen_InvalidCount" xml:space="preserve">
    <value>Count is invalid</value>
  </data>
  <data name="Hen_NameField" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Hen_RequireCost" xml:space="preserve">
    <value>Cost is required</value>
  </data>
  <data name="Hen_RequireName" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="Hen_RequireType" xml:space="preserve">
    <value>Type is required</value>
  </data>
  <data name="Hen_Title" xml:space="preserve">
    <value>Hen</value>
  </data>
  <data name="Hen_TypeField" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="House_ActiveField" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="House_DepreciationField" xml:space="preserve">
    <value>Depreciation / day</value>
  </data>
  <data name="House_NameField" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="House_PopulationField" xml:space="preserve">
    <value>Population</value>
  </data>
  <data name="House_PurchaseCostField" xml:space="preserve">
    <value>Purchase Cost</value>
  </data>
  <data name="House_RequireDepreciation" xml:space="preserve">
    <value>Depreciation is required</value>
  </data>
  <data name="House_RequireName" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="House_RequirePurchaseCost" xml:space="preserve">
    <value>Purchase cost is required</value>
  </data>
  <data name="House_RequireYearUsage" xml:space="preserve">
    <value>Year usage is required</value>
  </data>
  <data name="House_Title" xml:space="preserve">
    <value>Hen House</value>
  </data>
  <data name="House_YearUsageField" xml:space="preserve">
    <value>Year Usage</value>
  </data>
  <data name="Master_Title" xml:space="preserve">
    <value>Master Data</value>
  </data>
  <data name="Production_Title" xml:space="preserve">
    <value>Production</value>
  </data>
  <data name="Reports_Title" xml:space="preserve">
    <value>Reports</value>
  </data>
  <data name="Settings_Title" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="UsageDetail_RequireConsumable" xml:space="preserve">
    <value>Consumable is required</value>
  </data>
  <data name="UsageDetail_RequireCount" xml:space="preserve">
    <value>Count is required</value>
  </data>
  <data name="UsageDetail_RequireHouse" xml:space="preserve">
    <value>House is required</value>
  </data>
  <data name="Usage_ConsumableField" xml:space="preserve">
    <value>Consumable</value>
  </data>
  <data name="Usage_CountField" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="Usage_DateField" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Usage_DuplicateDate" xml:space="preserve">
    <value>Date is duplicate</value>
  </data>
  <data name="Usage_HouseField" xml:space="preserve">
    <value>House</value>
  </data>
  <data name="Usage_RequireDetails" xml:space="preserve">
    <value>Usage details information is required</value>
  </data>
  <data name="Usage_SubTotalField" xml:space="preserve">
    <value>SubTotal</value>
  </data>
  <data name="Usage_Title" xml:space="preserve">
    <value>Consumable Usage</value>
  </data>
  <data name="Usage_TotalField" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Usage_UnitPriceField" xml:space="preserve">
    <value>Unit Price</value>
  </data>
</root>